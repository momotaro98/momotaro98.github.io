<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on TBD</title>
    <link>http://example.org/tags/git/</link>
    <description>Recent content in Git on TBD</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© momotaro98</copyright>
    <lastBuildDate>Wed, 04 Dec 2019 00:09:34 +0900</lastBuildDate>
    
	<atom:link href="http://example.org/tags/git/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GitのコミットメッセージでCHANGELOGをいい感じに運用したい</title>
      <link>http://example.org/posts/post-1/</link>
      <pubDate>Wed, 04 Dec 2019 00:09:34 +0900</pubDate>
      
      <guid>http://example.org/posts/post-1/</guid>
      <description>この記事は Git Advent Calendar 2019 - Qiita 7日目の記事です。
CHANGELOGっていうのはね よく見るこんなやつ
  このバージョンではどんな改修があったのか利用者がザッと見て把握してもらうためのもの。
つまり作成するには前バージョンからの差分をサマライズする作業が必要になるがこれを自動化でいい感じにしたい！
コミットメッセージからCHANGELOG用テキストを出力してくれるツール git-chglog 素晴らしいツールがあった。
git-chglog
これはコミットメッセージからキーワードを抽出集約してCHANGELOG用のテキストを標準出力に出力してくれるツール。
同様なツールでこれとかが有名らしいがgit-chglogはどの言語にも依存しない汎用的なツール。
自分がプライベートで開発してるプロジェクトのコミットメッセージを使って試してみる。
git-chglogの設定ファイル上でコミットメッセージからの抽出条件と集約方法を定義する コミットメッセージを確認   こんな感じ。
普段なんとなくで、バグ改修したら:bug:、何か機能実装したら:sparkles: か :tada: を先頭につけていた。 :bug:と:sparkles: はGitHubなどでそれぞれ 🐛 ✨のemojiが表示される。
今回はこのコミットメッセージのタイトルをCHANGELOGの出力対象にするのをゴールにする。
emojiについては後述。
※ ちなみに上記の画像のようにコミットメッセージだけ得るには
git log --pretty=oneline --abbrev-commit とやると良いとのこと from https://stackoverflow.com/a/4488858
git-chglogの設定ファイル 設定ファイルとテンプレートファイルを用意する必要がある。
本家は→のような感じ https://github.com/git-chglog/git-chglog/tree/master/.chglog
この2ファイルは同一レポジトリ上になくても良く-cオプションで指定できる。
設定を以下の様にする。
config.yml
style: github template: CHANGELOG.tpl.md info: title: CHANGELOG #repository_url: https://github.com/momotaro98/XXXX options: commits: filters: # 集約対象のType(emoji)を設定 Type: - sparkles - bug commit_groups: title_maps: sparkles: Features bug: Bug Fixes header: pattern: &amp;#34;^:(\\w*)\\:\\s(.</description>
    </item>
    
  </channel>
</rss>